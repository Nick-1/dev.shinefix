Steps to add sites into the server

1. Clone repo into the var/www directory
2. Create config file for nginx - sudo nano /etc/nginx/sites-available/your_project_name
server {
    listen 80;
    server_name example.com; // your site name or public api

    location / {
        proxy_pass http://localhost:3001;  // local port where your site is working
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

3. Make link with sites-available and sites-enabled -  sudo ln -s /etc/nginx/sites-available/your_project_name /etc/nginx/sites-enabled/
4. Check nginx - sudo nginx -t. Reload nginx - sudo systemctl restart nginx

=============================================================================

Steps for setup https certificate

0. sudo apt install python3-certbot-nginx
1. sudo apt install certbot
2. sudo certbot --nginx -d yourdomain.com -d www.yourdomain.com

=============================================================================

Launch site with pm2

0. easy sites: pm2 app.js // just run your main javascript file
1. create in the root directory file ecosystem.config.js with:
module.exports = {
  apps: [
    {
      name: 'app-name',
      script: 'npm',
      args: 'run start:debug',
      env_production: {
        FRONTEND: 'http://production-front.com',
      },
    },
  ],
};

2. Add as part of script into your package.json: "pm2-start": "pm2 start ecosystem.config.js --env production",
   pm2 stop 12 - will stop process with id 12 (or use app-name)
   pm2 logs - all logs in real time
=============================================================================





